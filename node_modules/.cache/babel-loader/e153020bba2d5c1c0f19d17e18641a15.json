{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from '../glsl-utils';\nexport const useWebGL = (canvasRef, settings, objectsToDraw) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    useWireframe\n  } = settings;\n  _s(useEffect(_s(() => {\n    _s();\n    const canvas = canvasRef.current;\n    const gl = getGL(canvas);\n    if (!gl) {\n      alert('Sorry, your browser does not support WebGL');\n      return;\n    }\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n    const shaderProgram = initSimpleShaderProgram(gl, VERTEX_SHADER, FRAGMENT_SHADER);\n    if (!shaderProgram) {\n      alert('Shader initialization failed.');\n      return;\n    }\n    gl.useProgram(shaderProgram);\n    const vertexPosition = gl.getAttribLocation(shaderProgram, 'vertexPosition');\n    gl.enableVertexAttribArray(vertexPosition);\n    const colorUniform = gl.getUniformLocation(shaderProgram, 'color');\n    const uMatrixLocation = gl.getUniformLocation(shaderProgram, 'uMatrix');\n    objectsToDraw.forEach(obj => {\n      obj.verticesBuffer = initVertexBuffer(gl, obj.vertices);\n      obj.colorsBuffer = initVertexBuffer(gl, obj.colors);\n      if (obj.indices) {\n        obj.indexBuffer = initIndexBuffer(gl, obj.indices);\n      }\n    });\n    const drawScene = () => {\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      objectsToDraw.forEach(obj => {\n        gl.uniform3fv(colorUniform, obj.color);\n        gl.bindBuffer(gl.ARRAY_BUFFER, obj.verticesBuffer);\n        gl.vertexAttribPointer(vertexPosition, 3, gl.FLOAT, false, 0, 0);\n        gl.uniformMatrix4fv(uMatrixLocation, false, obj.matrix.toWebGL());\n        if (useWireframe || !obj.indexBuffer) {\n          gl.drawArrays(obj.mode, 0, obj.vertices.length / 3);\n        } else {\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, obj.indexBuffer);\n          gl.drawElements(obj.mode, obj.indices.length, gl.UNSIGNED_SHORT, 0);\n        }\n      });\n    };\n    const renderLoop = () => {\n      drawScene();\n      requestAnimationFrame(renderLoop);\n    };\n    renderLoop();\n    return () => cancelAnimationFrame(renderLoop);\n  }, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n    return [gl.useProgram];\n  }), [useWireframe, objectsToDraw]), \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", true);\n};\n_s2(useWebGL, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nconst VERTEX_SHADER = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nattribute vec3 vertexPosition;\nuniform mat4 uMatrix;\n\nvoid main(void) {\n    gl_Position = uMatrix * vec4(vertexPosition, 1.0);\n}\n`;\nconst FRAGMENT_SHADER = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform vec3 color;\n\nvoid main(void) {\n    gl_FragColor = vec4(color, 1.0);\n}\n`;","map":{"version":3,"names":["useEffect","getGL","initVertexBuffer","initIndexBuffer","initSimpleShaderProgram","useWebGL","canvasRef","settings","objectsToDraw","useWireframe","canvas","current","gl","alert","enable","DEPTH_TEST","depthFunc","LESS","clearColor","viewport","width","height","shaderProgram","VERTEX_SHADER","FRAGMENT_SHADER","useProgram","vertexPosition","getAttribLocation","enableVertexAttribArray","colorUniform","getUniformLocation","uMatrixLocation","forEach","obj","verticesBuffer","vertices","colorsBuffer","colors","indices","indexBuffer","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","uniform3fv","color","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","uniformMatrix4fv","matrix","toWebGL","drawArrays","mode","length","ELEMENT_ARRAY_BUFFER","drawElements","UNSIGNED_SHORT","renderLoop","requestAnimationFrame","cancelAnimationFrame"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Shaders/useWebGL.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from '../glsl-utils'\n\nexport const useWebGL = (canvasRef, settings, objectsToDraw) => {\n  const { useWireframe } = settings\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const gl = getGL(canvas)\n    if (!gl) {\n      alert('Sorry, your browser does not support WebGL')\n      return\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LESS)\n    gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    gl.viewport(0, 0, canvas.width, canvas.height)\n\n    const shaderProgram = initSimpleShaderProgram(gl, VERTEX_SHADER, FRAGMENT_SHADER)\n    if (!shaderProgram) {\n      alert('Shader initialization failed.')\n      return\n    }\n\n    gl.useProgram(shaderProgram)\n\n    const vertexPosition = gl.getAttribLocation(shaderProgram, 'vertexPosition')\n    gl.enableVertexAttribArray(vertexPosition)\n\n    const colorUniform = gl.getUniformLocation(shaderProgram, 'color')\n    const uMatrixLocation = gl.getUniformLocation(shaderProgram, 'uMatrix')\n\n    objectsToDraw.forEach(obj => {\n      obj.verticesBuffer = initVertexBuffer(gl, obj.vertices)\n      obj.colorsBuffer = initVertexBuffer(gl, obj.colors)\n      if (obj.indices) {\n        obj.indexBuffer = initIndexBuffer(gl, obj.indices)\n      }\n    })\n\n    const drawScene = () => {\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n      objectsToDraw.forEach(obj => {\n        gl.uniform3fv(colorUniform, obj.color)\n        gl.bindBuffer(gl.ARRAY_BUFFER, obj.verticesBuffer)\n        gl.vertexAttribPointer(vertexPosition, 3, gl.FLOAT, false, 0, 0)\n        gl.uniformMatrix4fv(uMatrixLocation, false, obj.matrix.toWebGL())\n        if (useWireframe || !obj.indexBuffer) {\n          gl.drawArrays(obj.mode, 0, obj.vertices.length / 3)\n        } else {\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, obj.indexBuffer)\n          gl.drawElements(obj.mode, obj.indices.length, gl.UNSIGNED_SHORT, 0)\n        }\n      })\n    }\n\n    const renderLoop = () => {\n      drawScene()\n      requestAnimationFrame(renderLoop)\n    }\n\n    renderLoop()\n    return () => cancelAnimationFrame(renderLoop)\n  }, [useWireframe, objectsToDraw])\n}\n\nconst VERTEX_SHADER = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nattribute vec3 vertexPosition;\nuniform mat4 uMatrix;\n\nvoid main(void) {\n    gl_Position = uMatrix * vec4(vertexPosition, 1.0);\n}\n`\n\nconst FRAGMENT_SHADER = `\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform vec3 color;\n\nvoid main(void) {\n    gl_FragColor = vec4(color, 1.0);\n}\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}