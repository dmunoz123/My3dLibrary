{"ast":null,"code":"var _jsxFileName = \"/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js\",\n  _s = $RefreshSig$();\n/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 512;\nconst CANVAS_HEIGHT = 512;\nconst FRAMES_PER_SECOND = 30;\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst Sandbox = props => {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      alert('Unable to initialize WebGL. Your browser or machine may not support it.');\n      return;\n    }\n    gl.enable(gl.DEPTH_TEST);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      // Display obj (forEach)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n      // All done.\n      gl.flush();\n    };\n    let previousTimestamp;\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp;\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp;\n      if (progress >= MILLISECONDS_PER_FRAME) {\n        // Update your scene based on elapsed time or other logic\n        updateScene(progress);\n        drawScene(); // Redraw the scene with any updates\n\n        previousTimestamp = timestamp;\n      }\n      window.requestAnimationFrame(nextFrame);\n    };\n    drawScene();\n    window.requestAnimationFrame(nextFrame);\n  }, [canvasRef]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of demonstrating them. It doesn\\u2019t have to fit any particular pitch or application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      ref: canvasRef,\n      children: \"Your favorite update-your-browser message here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["useEffect","useRef","CANVAS_WIDTH","CANVAS_HEIGHT","FRAMES_PER_SECOND","MILLISECONDS_PER_FRAME","Sandbox","props","canvasRef","canvas","current","gl","getContext","alert","enable","DEPTH_TEST","clearColor","viewport","width","height","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bindBuffer","ARRAY_BUFFER","flush","previousTimestamp","nextFrame","timestamp","window","requestAnimationFrame","progress","updateScene"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js"],"sourcesContent":["/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef } from 'react'\n\nconst CANVAS_WIDTH = 512\nconst CANVAS_HEIGHT = 512\n\nconst FRAMES_PER_SECOND = 30\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND\n\nconst Sandbox = props => {\n  const canvasRef = useRef()\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) {\n      return\n    }\n\n    const gl = canvas.getContext('webgl')\n\n    if (!gl) {\n      alert('Unable to initialize WebGL. Your browser or machine may not support it.')\n      return\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.clearColor(0.0, 0.0, 0.0, 0.0)\n    gl.viewport(0, 0, canvas.width, canvas.height)\n\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n      // Display obj (forEach)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n      // All done.\n      gl.flush()\n    }\n\n    let previousTimestamp\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp\n      if (progress >= MILLISECONDS_PER_FRAME) {\n        // Update your scene based on elapsed time or other logic\n        updateScene(progress);\n\n        drawScene() // Redraw the scene with any updates\n\n        previousTimestamp = timestamp\n      }\n\n      window.requestAnimationFrame(nextFrame)\n    }\n\n    drawScene()\n\n    window.requestAnimationFrame(nextFrame)\n  }, [canvasRef])\n\n  return (\n    <article>\n      <p>\n        The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of\n        demonstrating them. It doesn’t have to fit any particular pitch or application.\n      </p>\n\n      <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={canvasRef}>\n        Your favorite update-your-browser message here.\n      </canvas>\n    </article>\n  )\n}\n\nexport default Sandbox\n"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA;AAEzC,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,aAAa,GAAG,GAAG;AAEzB,MAAMC,iBAAiB,GAAG,EAAE;AAC5B,MAAMC,sBAAsB,GAAG,IAAI,GAAGD,iBAAiB;AAEvD,MAAME,OAAO,GAAGC,KAAK,IAAI;EAAA;EACvB,MAAMC,SAAS,GAAGP,MAAM,EAAE;EAE1BD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;MACX;IACF;IAEA,MAAME,EAAE,GAAGF,MAAM,CAACG,UAAU,CAAC,OAAO,CAAC;IAErC,IAAI,CAACD,EAAE,EAAE;MACPE,KAAK,CAAC,yEAAyE,CAAC;MAChF;IACF;IAEAF,EAAE,CAACG,MAAM,CAACH,EAAE,CAACI,UAAU,CAAC;IACxBJ,EAAE,CAACK,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACjCL,EAAE,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAER,MAAM,CAACS,KAAK,EAAET,MAAM,CAACU,MAAM,CAAC;IAE9C,MAAMC,SAAS,GAAG,MAAM;MACtB;MACAT,EAAE,CAACU,KAAK,CAACV,EAAE,CAACW,gBAAgB,GAAGX,EAAE,CAACY,gBAAgB,CAAC;;MAEnD;;MAEAZ,EAAE,CAACa,UAAU,CAACb,EAAE,CAACc,YAAY,EAAE,IAAI,CAAC;;MAEpC;MACAd,EAAE,CAACe,KAAK,EAAE;IACZ,CAAC;IAED,IAAIC,iBAAiB;IACrB,MAAMC,SAAS,GAAGC,SAAS,IAAI;MAC7B;MACA,IAAI,CAACF,iBAAiB,EAAE;QACtBA,iBAAiB,GAAGE,SAAS;QAC7BC,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;QACvC;MACF;;MAEA;MACA,MAAMI,QAAQ,GAAGH,SAAS,GAAGF,iBAAiB;MAC9C,IAAIK,QAAQ,IAAI3B,sBAAsB,EAAE;QACtC;QACA4B,WAAW,CAACD,QAAQ,CAAC;QAErBZ,SAAS,EAAE,EAAC;;QAEZO,iBAAiB,GAAGE,SAAS;MAC/B;MAEAC,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;IACzC,CAAC;IAEDR,SAAS,EAAE;IAEXU,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;EACzC,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC;EAEf,oBACE;IAAA,wBACE;MAAA,UAAG;IAGH;MAAA;MAAA;MAAA;IAAA,QAAI,eAEJ;MAAQ,KAAK,EAAEN,YAAa;MAAC,MAAM,EAAEC,aAAc;MAAC,GAAG,EAAEK,SAAU;MAAA,UAAC;IAEpE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAA,GAxEKF,OAAO;AAAA,KAAPA,OAAO;AA0Eb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module"}