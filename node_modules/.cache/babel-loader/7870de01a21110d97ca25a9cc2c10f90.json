{"ast":null,"code":"var _jsxFileName = \"/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/PitchedScene.js\",\n  _s = $RefreshSig$();\n/**\n * Build out this component to display your pitched scene—the one that goes full circle to the first assignment,\n * but now done using your own 3D library. It doesn’t have to be the same scene of course—that was done with\n * a different group, many many weeks ago!\n */\nimport { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 512;\nconst CANVAS_HEIGHT = 512;\nconst FRAMES_PER_SECOND = 30;\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst PitchedScene = props => {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const renderingContext = canvas.getContext('2d');\n    let previousTimestamp;\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp;\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp;\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // This is not the code you’re looking for.\n      renderingContext.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      renderingContext.fillText(`timestamp: ${timestamp}`, 10, 20);\n\n      // Request the next frame.\n      previousTimestamp = timestamp;\n      window.requestAnimationFrame(nextFrame);\n    };\n    window.requestAnimationFrame(nextFrame);\n  }, [canvasRef]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Use this component to implement your pitched scene\\u2014the one with an intended purpose, use cases, etc.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      ref: canvasRef,\n      children: \"Your favorite update-your-browser message here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PitchedScene, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PitchedScene;\nexport default PitchedScene;\nvar _c;\n$RefreshReg$(_c, \"PitchedScene\");","map":{"version":3,"names":["useEffect","useRef","CANVAS_WIDTH","CANVAS_HEIGHT","FRAMES_PER_SECOND","MILLISECONDS_PER_FRAME","PitchedScene","props","canvasRef","canvas","current","renderingContext","getContext","previousTimestamp","nextFrame","timestamp","window","requestAnimationFrame","progress","clearRect","fillText"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/PitchedScene.js"],"sourcesContent":["/**\n * Build out this component to display your pitched scene—the one that goes full circle to the first assignment,\n * but now done using your own 3D library. It doesn’t have to be the same scene of course—that was done with\n * a different group, many many weeks ago!\n */\nimport { useEffect, useRef } from 'react'\n\nconst CANVAS_WIDTH = 512\nconst CANVAS_HEIGHT = 512\n\nconst FRAMES_PER_SECOND = 30\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND\n\nconst PitchedScene = props => {\n  const canvasRef = useRef()\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) {\n      return\n    }\n\n    const renderingContext = canvas.getContext('2d')\n\n    let previousTimestamp\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // This is not the code you’re looking for.\n      renderingContext.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n      renderingContext.fillText(`timestamp: ${timestamp}`, 10, 20)\n\n      // Request the next frame.\n      previousTimestamp = timestamp\n      window.requestAnimationFrame(nextFrame)\n    }\n\n    window.requestAnimationFrame(nextFrame)\n  }, [canvasRef])\n\n  return (\n    <article>\n      <p>Use this component to implement your pitched scene—the one with an intended purpose, use cases, etc.</p>\n\n      <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={canvasRef}>\n        Your favorite update-your-browser message here.\n      </canvas>\n    </article>\n  )\n}\n\nexport default PitchedScene\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAA;AAEzC,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,aAAa,GAAG,GAAG;AAEzB,MAAMC,iBAAiB,GAAG,EAAE;AAC5B,MAAMC,sBAAsB,GAAG,IAAI,GAAGD,iBAAiB;AAEvD,MAAME,YAAY,GAAGC,KAAK,IAAI;EAAA;EAC5B,MAAMC,SAAS,GAAGP,MAAM,EAAE;EAE1BD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;MACX;IACF;IAEA,MAAME,gBAAgB,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEhD,IAAIC,iBAAiB;IACrB,MAAMC,SAAS,GAAGC,SAAS,IAAI;MAC7B;MACA,IAAI,CAACF,iBAAiB,EAAE;QACtBA,iBAAiB,GAAGE,SAAS;QAC7BC,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;QACvC;MACF;;MAEA;MACA,MAAMI,QAAQ,GAAGH,SAAS,GAAGF,iBAAiB;MAC9C,IAAIK,QAAQ,GAAGb,sBAAsB,EAAE;QACrC;QACAW,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;QACvC;MACF;;MAEA;MACAH,gBAAgB,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEjB,YAAY,EAAEC,aAAa,CAAC;MAC7DQ,gBAAgB,CAACS,QAAQ,CAAE,cAAaL,SAAU,EAAC,EAAE,EAAE,EAAE,EAAE,CAAC;;MAE5D;MACAF,iBAAiB,GAAGE,SAAS;MAC7BC,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;IACzC,CAAC;IAEDE,MAAM,CAACC,qBAAqB,CAACH,SAAS,CAAC;EACzC,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC;EAEf,oBACE;IAAA,wBACE;MAAA,UAAG;IAAoG;MAAA;MAAA;MAAA;IAAA,QAAI,eAE3G;MAAQ,KAAK,EAAEN,YAAa;MAAC,MAAM,EAAEC,aAAc;MAAC,GAAG,EAAEK,SAAU;MAAA,UAAC;IAEpE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAA,GAjDKF,YAAY;AAAA,KAAZA,YAAY;AAmDlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}