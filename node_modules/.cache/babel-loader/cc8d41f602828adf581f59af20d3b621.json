{"ast":null,"code":"var _jsxFileName = \"/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js\",\n  _s2 = $RefreshSig$();\n/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from './glsl-utils';\nimport XYGrid from './Geometries/XY-Grid';\nimport Cube from './Geometries/Cube';\nimport Sphere from './Geometries/Sphere';\nimport { Group } from './Group';\nimport Matrix from './Matrix/Matrix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VERTEX_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  attribute vec3 vertexPosition;\n  uniform mat4 uMatrix;\n\n  void main(void) {\n    gl_Position =  uMatrix * vec4(vertexPosition, 1.0);\n  }\n`;\nconst FRAGMENT_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  uniform vec3 color;\n\n  void main(void) {\n    gl_FragColor = vec4(color, 1.0);\n  }\n`;\nconst CANVAS_WIDTH = 512;\nconst CANVAS_HEIGHT = 512;\nconst FRAMES_PER_SECOND = 60;\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst Sandbox = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [useWireframe, setUseWireframe] = useState(false);\n  const [showCube, setShowCube] = useState(false);\n  const [showXYGrid, setShowXYGrid] = useState(true);\n  const [showSphere, setShowSphere] = useState(false);\n  const [scale, setNewScale] = useState(1);\n  const [rotation, setNewRotation] = useState(0);\n  const [translation, setNewTranslation] = useState(0);\n  const [groups, setGroups] = useState([]);\n  const [lastObject, setLastObject] = useState(null);\n  const canvasRef = useRef();\n  const timestampRef = useRef();\n  _s(useEffect(_s(() => {\n    _s();\n    console.log('Effect hook running');\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const gl = getGL(canvas);\n    if (!gl) {\n      alert('Sorry, Your browser does not support WebGL');\n    }\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    // Shader initialization\n    let abort = false;\n    const simpleShaderProgram = initSimpleShaderProgram(gl, VERTEX_SHADER, FRAGMENT_SHADER, shader => {\n      abort = true;\n      alert('Shader loading error' + gl.getShaderInfoLog(shader));\n    }, simpleShaderProgram => {\n      abort = true;\n      alert('Could not correctly link the shader program');\n    });\n    if (abort) {\n      alert('Fatal errors encountered; we cannot continue.');\n      return;\n    }\n    gl.useProgram(simpleShaderProgram);\n    const objectsToDraw = [];\n\n    // Conditionally add the XY grid\n    if (showXYGrid) {\n      const xy = new XYGrid();\n      objectsToDraw.push({\n        object: xy,\n        color: {\n          r: 0.7,\n          g: 0.7,\n          b: 0.7\n        },\n        vertices: xy.toRawLineArray(),\n        mode: gl.LINES\n      });\n    }\n\n    // Conditionally add the cube (only do # in [1.0 -> 1.8])\n    if (showCube) {\n      const cubeObject = new Cube(1);\n      setLastObject(cubeObject);\n      objectsToDraw.push({\n        object: cubeObject,\n        color: {\n          r: 0.7,\n          g: 0.0,\n          b: 0.0\n        },\n        vertices: useWireframe ? cubeObject.toRawLineArray() : cubeObject.toRawTriangleArray(),\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES\n      });\n      setLastObject(cubeObject);\n    }\n    if (showSphere) {\n      const sphereObject = new Sphere();\n      objectsToDraw.push({\n        object: sphereObject,\n        color: {\n          r: 0,\n          g: 0.5,\n          b: 1\n        },\n        // Example color for the sphere\n        vertices: useWireframe ? sphereObject.toRawLineArray() : sphereObject.toRawTriangleArray(),\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES\n      });\n      setLastObject(sphereObject);\n    }\n    const vertexPositonAttribute = gl.getAttribLocation(simpleShaderProgram, 'vertexPosition');\n    gl.enableVertexAttribArray(vertexPositonAttribute);\n    const colorUniform = gl.getUniformLocation(simpleShaderProgram, 'color');\n    const uMatrixLocation = gl.getUniformLocation(simpleShaderProgram, 'uMatrix');\n\n    // Load buffers with vertex data\n    objectsToDraw.forEach(objectToDraw => {\n      // going to implement using classes instead of so many references\n      // const transformable = objectToDraw.object\n\n      objectToDraw.verticesBuffer = initVertexBuffer(gl, objectToDraw.vertices);\n      if (!objectToDraw.colors) {\n        // If we have a single color, we expand that into an array\n        // of the same color over and over.\n        objectToDraw.colors = [];\n        for (let i = 0, maxi = objectToDraw.vertices.length / 3; i < maxi; i += 1) {\n          objectToDraw.colors = objectToDraw.colors.concat(objectToDraw.color.r, objectToDraw.color.g, objectToDraw.color.b);\n        }\n        objectToDraw.colorsBuffer = initVertexBuffer(gl, objectToDraw.colors);\n      }\n\n      // if indices exist ...\n      if (objectToDraw.indices) {\n        objectToDraw.indexBuffer = initIndexBuffer(gl, objectToDraw.indices);\n      }\n    });\n\n    // drawing obj by vertices\n    const drawMyObject = object => {\n      gl.uniform3f(colorUniform, object.color.r, object.color.g, object.color.b);\n      gl.uniformMatrix4fv(uMatrixLocation, false, object.object.matrix.toWebGL());\n      gl.bindBuffer(gl.ARRAY_BUFFER, object.verticesBuffer);\n      gl.vertexAttribPointer(vertexPositonAttribute, 3, gl.FLOAT, false, 0, 0);\n      if (useWireframe || !object.indexBuffer) {\n        gl.drawArrays(object.mode, 0, object.vertices.length / 3);\n      } else {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer);\n        gl.drawElements(object.mode, object.indices.length, gl.UNSIGNED_SHORT, 0);\n      }\n    };\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      const drawObjectOrGroup = function (item) {\n        let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Matrix();\n        if (item instanceof Group) {\n          item.traverse(drawObjectOrGroup); // Recursively draw children\n        } else {\n          drawMyObject(item);\n        }\n      };\n      objectsToDraw.forEach(drawObjectOrGroup);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    let previousTimestamp;\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp;\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp;\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n      drawScene();\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`;\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp;\n      //window.requestAnimationFrame(nextFrame)\n    };\n\n    drawScene();\n    window.requestAnimationFrame(nextFrame);\n  }, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n    return [gl.useProgram];\n  }), [useWireframe, showCube, showXYGrid, showSphere, groups]), \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", true);\n  const applyTransformation = () => {\n    if (!lastObject) return;\n    lastObject.setPosition(translation, translation, translation);\n    lastObject.setRotation(rotation, rotation, rotation);\n    lastObject.setScale(scale, scale, scale);\n    lastObject.needsUpdate = true;\n  };\n\n  // Function to toggle cube visibility\n  const toggleCube = () => setShowCube(!showCube);\n\n  // Function to toggle XY grid visibility\n  const toggleXYGrid = () => setShowXYGrid(!showXYGrid);\n  const toggleSphere = () => setShowSphere(!showSphere);\n  const removeObjectFromGroup = () => {\n    if (groups.length > 0) {\n      const updatedGroups = [...groups];\n      const lastGroup = updatedGroups[updatedGroups.length - 1];\n      if (lastGroup.children.length > 0) {\n        lastGroup.remove(lastGroup.children[lastGroup.children.length - 1]);\n        setGroups(updatedGroups);\n      }\n    }\n  };\n  const addObjectToLastGroup = () => {\n    if (lastObject && groups.length > 0) {\n      const updatedGroups = [...groups];\n      updatedGroups[updatedGroups.length - 1].add(lastObject);\n      setGroups(updatedGroups);\n    }\n  };\n  const createNewGroup = () => {\n    setGroups([...groups, new Group()]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of demonstrating them. It doesn\\u2019t have to fit any particular pitch or application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUseWireframe(!useWireframe),\n      children: useWireframe ? 'Show Filled' : 'Show Wireframe'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCube,\n      children: showCube ? 'Remove Cube' : 'Add Cube'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleXYGrid,\n      children: showXYGrid ? 'Remove XY Grid' : 'Add XY Grid'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSphere,\n      children: showSphere ? 'Remove Sphere' : 'Add Sphere'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createNewGroup,\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addObjectToLastGroup,\n      children: \"Add Object to Last Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeObjectFromGroup,\n      children: \"Remove Object From Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Scale: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"-2\",\n        max: \"2\",\n        step: \"0.1\",\n        value: scale,\n        onChange: e => {\n          setNewScale(parseFloat(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rotation: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"360\",\n        step: \"1\",\n        value: rotation,\n        onChange: e => {\n          setNewRotation(parseFloat(e.target.value));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Translation: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"-5\",\n        max: \"5\",\n        step: \"0.1\",\n        value: translation,\n        onChange: e => setNewTranslation(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Group \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), group.children.map((child, childIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: child.constructor.name\n        }, childIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: timestampRef,\n        style: {\n          position: 'absolute',\n          top: '7px',\n          left: '10px',\n          color: 'black'\n        },\n        children: \"Timestamp: 0.00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s2(Sandbox, \"nP32NIb/2hOV/IZYUmj2sfwM/ZU=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["useEffect","useRef","useState","getGL","initVertexBuffer","initIndexBuffer","initSimpleShaderProgram","XYGrid","Cube","Sphere","Group","Matrix","VERTEX_SHADER","FRAGMENT_SHADER","CANVAS_WIDTH","CANVAS_HEIGHT","FRAMES_PER_SECOND","MILLISECONDS_PER_FRAME","Sandbox","props","useWireframe","setUseWireframe","showCube","setShowCube","showXYGrid","setShowXYGrid","showSphere","setShowSphere","scale","setNewScale","rotation","setNewRotation","translation","setNewTranslation","groups","setGroups","lastObject","setLastObject","canvasRef","timestampRef","console","log","canvas","current","gl","alert","enable","DEPTH_TEST","depthFunc","LESS","clearColor","viewport","width","height","abort","simpleShaderProgram","shader","getShaderInfoLog","useProgram","objectsToDraw","xy","push","object","color","r","g","b","vertices","toRawLineArray","mode","LINES","cubeObject","toRawTriangleArray","TRIANGLES","sphereObject","vertexPositonAttribute","getAttribLocation","enableVertexAttribArray","colorUniform","getUniformLocation","uMatrixLocation","forEach","objectToDraw","verticesBuffer","colors","i","maxi","length","concat","colorsBuffer","indices","indexBuffer","drawMyObject","uniform3f","uniformMatrix4fv","matrix","toWebGL","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","ELEMENT_ARRAY_BUFFER","drawElements","UNSIGNED_SHORT","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawObjectOrGroup","item","traverse","previousTimestamp","nextFrame","timestamp","window","requestAnimationFrame","progress","innerText","toFixed","applyTransformation","setPosition","setRotation","setScale","needsUpdate","toggleCube","toggleXYGrid","toggleSphere","removeObjectFromGroup","updatedGroups","lastGroup","children","remove","addObjectToLastGroup","add","createNewGroup","e","parseFloat","target","value","map","group","index","child","childIndex","constructor","name","position","top","left"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js"],"sourcesContent":["/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef, useState } from 'react'\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from './glsl-utils'\nimport XYGrid from './Geometries/XY-Grid'\nimport Cube from './Geometries/Cube'\nimport Sphere from './Geometries/Sphere'\nimport { Group } from './Group'\nimport Matrix from './Matrix/Matrix'\n\nconst VERTEX_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  attribute vec3 vertexPosition;\n  uniform mat4 uMatrix;\n\n  void main(void) {\n    gl_Position =  uMatrix * vec4(vertexPosition, 1.0);\n  }\n`\n\nconst FRAGMENT_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  uniform vec3 color;\n\n  void main(void) {\n    gl_FragColor = vec4(color, 1.0);\n  }\n`\n\nconst CANVAS_WIDTH = 512\nconst CANVAS_HEIGHT = 512\n\nconst FRAMES_PER_SECOND = 60\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND\n\nconst Sandbox = props => {\n  const [useWireframe, setUseWireframe] = useState(false)\n  const [showCube, setShowCube] = useState(false)\n  const [showXYGrid, setShowXYGrid] = useState(true)\n  const [showSphere, setShowSphere] = useState(false)\n\n  const [scale, setNewScale] = useState(1)\n  const [rotation, setNewRotation] = useState(0)\n  const [translation, setNewTranslation] = useState(0)\n\n  const [groups, setGroups] = useState([])\n  const [lastObject, setLastObject] = useState(null)\n\n  const canvasRef = useRef()\n  const timestampRef = useRef()\n\n  useEffect(() => {\n    console.log('Effect hook running')\n    const canvas = canvasRef.current\n    if (!canvas) {\n      return\n    }\n\n    const gl = getGL(canvas)\n\n    if (!gl) {\n      alert('Sorry, Your browser does not support WebGL')\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LESS)\n    gl.clearColor(0.0, 0.0, 0.0, 0.0)\n    gl.viewport(0, 0, canvas.width, canvas.height)\n\n    // Shader initialization\n    let abort = false\n    const simpleShaderProgram = initSimpleShaderProgram(\n      gl,\n      VERTEX_SHADER,\n      FRAGMENT_SHADER,\n\n      shader => {\n        abort = true\n        alert('Shader loading error' + gl.getShaderInfoLog(shader))\n      },\n\n      simpleShaderProgram => {\n        abort = true\n        alert('Could not correctly link the shader program')\n      }\n    )\n\n    if (abort) {\n      alert('Fatal errors encountered; we cannot continue.')\n      return\n    }\n\n    gl.useProgram(simpleShaderProgram)\n\n    const objectsToDraw = []\n\n    // Conditionally add the XY grid\n    if (showXYGrid) {\n      const xy = new XYGrid()\n      objectsToDraw.push({\n        object: xy,\n        color: { r: 0.7, g: 0.7, b: 0.7 },\n        vertices: xy.toRawLineArray(),\n        mode: gl.LINES\n      })\n    }\n\n    // Conditionally add the cube (only do # in [1.0 -> 1.8])\n    if (showCube) {\n      const cubeObject = new Cube(1)\n      setLastObject(cubeObject)\n      objectsToDraw.push({\n        object: cubeObject,\n        color: { r: 0.7, g: 0.0, b: 0.0 },\n        vertices: useWireframe ? cubeObject.toRawLineArray() : cubeObject.toRawTriangleArray(),\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES\n      })\n      setLastObject(cubeObject)\n    }\n\n    if (showSphere) {\n      const sphereObject = new Sphere()\n      objectsToDraw.push({\n        object: sphereObject,\n        color: { r: 0, g: 0.5, b: 1 }, // Example color for the sphere\n        vertices: useWireframe ? sphereObject.toRawLineArray() : sphereObject.toRawTriangleArray(),\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES\n      })\n      setLastObject(sphereObject)\n    }\n\n    const vertexPositonAttribute = gl.getAttribLocation(simpleShaderProgram, 'vertexPosition')\n    gl.enableVertexAttribArray(vertexPositonAttribute)\n    const colorUniform = gl.getUniformLocation(simpleShaderProgram, 'color')\n    const uMatrixLocation = gl.getUniformLocation(simpleShaderProgram, 'uMatrix')\n\n    // Load buffers with vertex data\n    objectsToDraw.forEach(objectToDraw => {\n      // going to implement using classes instead of so many references\n      // const transformable = objectToDraw.object\n\n      objectToDraw.verticesBuffer = initVertexBuffer(gl, objectToDraw.vertices)\n\n      if (!objectToDraw.colors) {\n        // If we have a single color, we expand that into an array\n        // of the same color over and over.\n        objectToDraw.colors = []\n        for (let i = 0, maxi = objectToDraw.vertices.length / 3; i < maxi; i += 1) {\n          objectToDraw.colors = objectToDraw.colors.concat(\n            objectToDraw.color.r,\n            objectToDraw.color.g,\n            objectToDraw.color.b\n          )\n        }\n\n        objectToDraw.colorsBuffer = initVertexBuffer(gl, objectToDraw.colors)\n      }\n\n      // if indices exist ...\n      if (objectToDraw.indices) {\n        objectToDraw.indexBuffer = initIndexBuffer(gl, objectToDraw.indices)\n      }\n    })\n\n    // drawing obj by vertices\n    const drawMyObject = object => {\n      gl.uniform3f(colorUniform, object.color.r, object.color.g, object.color.b)\n\n      gl.uniformMatrix4fv(uMatrixLocation, false, object.object.matrix.toWebGL())\n      gl.bindBuffer(gl.ARRAY_BUFFER, object.verticesBuffer)\n      gl.vertexAttribPointer(vertexPositonAttribute, 3, gl.FLOAT, false, 0, 0)\n\n      if (useWireframe || !object.indexBuffer) {\n        gl.drawArrays(object.mode, 0, object.vertices.length / 3)\n      } else {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer)\n        gl.drawElements(object.mode, object.indices.length, gl.UNSIGNED_SHORT, 0)\n      }\n    }\n\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n      const drawObjectOrGroup = (item, matrix = new Matrix()) => {\n        if (item instanceof Group) {\n          item.traverse(drawObjectOrGroup) // Recursively draw children\n        } else {\n          drawMyObject(item)\n        }\n      }\n\n      objectsToDraw.forEach(drawObjectOrGroup)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    }\n\n    let previousTimestamp\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      drawScene()\n\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp\n      //window.requestAnimationFrame(nextFrame)\n    }\n\n    drawScene()\n\n    window.requestAnimationFrame(nextFrame)\n  }, [useWireframe, showCube, showXYGrid, showSphere, groups])\n\n  const applyTransformation = () => {\n    if (!lastObject) return\n\n    lastObject.setPosition(translation, translation, translation)\n    lastObject.setRotation(rotation, rotation, rotation)\n    lastObject.setScale(scale, scale, scale)\n    lastObject.needsUpdate = true \n  }\n\n  // Function to toggle cube visibility\n  const toggleCube = () => setShowCube(!showCube)\n\n  // Function to toggle XY grid visibility\n  const toggleXYGrid = () => setShowXYGrid(!showXYGrid)\n\n  const toggleSphere = () => setShowSphere(!showSphere)\n\n  const removeObjectFromGroup = () => {\n    if (groups.length > 0) {\n      const updatedGroups = [...groups]\n      const lastGroup = updatedGroups[updatedGroups.length - 1]\n      if (lastGroup.children.length > 0) {\n        lastGroup.remove(lastGroup.children[lastGroup.children.length - 1])\n        setGroups(updatedGroups)\n      }\n    }\n  }\n\n  const addObjectToLastGroup = () => {\n    if (lastObject && groups.length > 0) {\n      const updatedGroups = [...groups]\n      updatedGroups[updatedGroups.length - 1].add(lastObject)\n      setGroups(updatedGroups)\n    }\n  }\n\n  const createNewGroup = () => {\n    setGroups([...groups, new Group()])\n  }\n\n  return (\n    <article>\n      <p>\n        The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of\n        demonstrating them. It doesn’t have to fit any particular pitch or application.\n      </p>\n      <button onClick={() => setUseWireframe(!useWireframe)}>{useWireframe ? 'Show Filled' : 'Show Wireframe'}</button>\n      <button onClick={toggleCube}>{showCube ? 'Remove Cube' : 'Add Cube'}</button> {/* Toggle cube */}\n      <button onClick={toggleXYGrid}>{showXYGrid ? 'Remove XY Grid' : 'Add XY Grid'}</button> {/* Toggle XY grid */}\n      <button onClick={toggleSphere}>{showSphere ? 'Remove Sphere' : 'Add Sphere'}</button>\n      <button onClick={createNewGroup}>Create New Group</button>\n      <button onClick={addObjectToLastGroup}>Add Object to Last Group</button>\n      <button onClick={removeObjectFromGroup}>Remove Object From Group</button>\n      <div>\n        <label>Scale: </label>\n        <input\n          type=\"range\"\n          min=\"-2\"\n          max=\"2\"\n          step=\"0.1\"\n          value={scale}\n          onChange={e => {\n            setNewScale(parseFloat(e.target.value))}\n          }\n        />\n        <label>Rotation: </label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"360\"\n          step=\"1\"\n          value={rotation}\n          onChange={e => {\n            setNewRotation(parseFloat(e.target.value))\n          }}\n        />\n        <label>Translation: </label>\n        <input\n          type=\"range\"\n          min=\"-5\"\n          max=\"5\"\n          step=\"0.1\"\n          value={translation}\n          onChange={e => setNewTranslation(parseFloat(e.target.value))}\n        />\n      </div>\n      <div>\n        <h2>Groups</h2>\n        {groups.map((group, index) => (\n          <div key={index}>\n            <h3>Group {index + 1}</h3>\n            {group.children.map((child, childIndex) => (\n              <p key={childIndex}>{child.constructor.name}</p>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div style={{ position: 'relative' }}>\n        <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={canvasRef} />\n        <div ref={timestampRef} style={{ position: 'absolute', top: '7px', left: '10px', color: 'black' }}>\n          Timestamp: 0.00\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Sandbox\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}