{"ast":null,"code":"var _jsxFileName = \"/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js\",\n  _s2 = $RefreshSig$();\n/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from './glsl-utils';\nimport XYGrid from './Geometries/XY-Grid';\nimport Cube from './Geometries/Cube';\nimport Sphere from './Geometries/Sphere';\nimport { Group } from './Group';\nimport Matrix from './Matrix/Matrix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VERTEX_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  attribute vec3 vertexPosition;\n  // uniform mat4 uMatrix;\n\n  void main(void) {\n    gl_Position =  vec4(vertexPosition, 1.0);\n  }\n`;\nconst FRAGMENT_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  uniform vec3 color;\n\n  void main(void) {\n    gl_FragColor = vec4(color, 1.0);\n  }\n`;\nconst CANVAS_WIDTH = 512;\nconst CANVAS_HEIGHT = 512;\nconst FRAMES_PER_SECOND = 60;\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst Sandbox = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [useWireframe, setUseWireframe] = useState(false);\n  const [showCube, setShowCube] = useState(false);\n  const [showXYGrid, setShowXYGrid] = useState(true);\n  const [showSphere, setShowSphere] = useState(false);\n  const [groups, setGroups] = useState([]);\n  const [lastObject, setLastObject] = useState(null);\n  const canvasRef = useRef();\n  const timestampRef = useRef();\n  _s(useEffect(_s(() => {\n    _s();\n    console.log('Effect hook running');\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const gl = getGL(canvas);\n    if (!gl) {\n      alert('Sorry, Your browser does not support WebGL');\n    }\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    // Shader initialization\n    let abort = false;\n    const simpleShaderProgram = initSimpleShaderProgram(gl, VERTEX_SHADER, FRAGMENT_SHADER, shader => {\n      abort = true;\n      alert('Shader loading error' + gl.getShaderInfoLog(shader));\n    }, simpleShaderProgram => {\n      abort = true;\n      alert('Could not correctly link the shader program');\n    });\n    if (abort) {\n      alert('Fatal errors encountered; we cannot continue.');\n      return;\n    }\n    gl.useProgram(simpleShaderProgram);\n    const objectsToDraw = [];\n    // Conditionally add the XY grid\n\n    if (showXYGrid) {\n      const xy = new XYGrid();\n      objectsToDraw.push({\n        object: xy,\n        mode: gl.LINES,\n        useWireframe: true\n      });\n    }\n\n    // Conditionally add the cube (only do # in [1.0 -> 1.8])\n    if (showCube) {\n      const cubeObject = new Cube(1);\n      setLastObject(cubeObject);\n      objectsToDraw.push({\n        object: cubeObject,\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES,\n        useWireframe: true\n      });\n    }\n    if (showSphere) {\n      const sphereObject = new Sphere();\n      setLastObject(sphereObject);\n      objectsToDraw.push({\n        object: sphereObject,\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES,\n        useWireframe: true\n      });\n    }\n    const vertexPositonAttribute = gl.getAttribLocation(simpleShaderProgram, 'vertexPosition');\n    gl.enableVertexAttribArray(vertexPositonAttribute);\n    const colorUniform = gl.getUniformLocation(simpleShaderProgram, 'color');\n    //const uMatrixLocation = gl.getUniformLocation(simpleShaderProgram, 'uMatrix')\n\n    // Load buffers with vertex data\n    objectsToDraw.forEach(entry => {\n      const object = entry.object;\n      console.log(object);\n      let vertices = entry.useWireframe ? object.toRawLineArray() : object.toRawTriangleArray();\n      console.log(vertices);\n      object.verticesBuffer = initVertexBuffer(gl, vertices);\n      if (!object.color) {\n        // If we have a single color, we expand that into an array\n        // of the same color over and over.\n        object.colors = [];\n        for (let i = 0, maxi = vertices.length / 3; i < maxi; i += 1) {\n          object.colors = object.colors.concat(object.color.r, object.color.g, object.color.b);\n        }\n      }\n      object.colorsBuffer = initVertexBuffer(gl, object.colors);\n\n      // if indices exist ...\n      if (object.indices) {\n        object.indexBuffer = initIndexBuffer(gl, object.indices);\n      }\n    });\n\n    // drawing obj by vertices\n    const drawMyObject = item => {\n      const object = item.object;\n      gl.uniform3f(colorUniform, object.color.r, object.color.g, object.color.b);\n\n      // console.log(object)\n\n      // console.log(matrix) // Check the object\n      // console.log(matrix.toWebGL)\n      // const webGLMatrix = matrix.toWebGL()\n      // gl.uniformMatrix4fv(uMatrixLocation, false, webGLMatrix)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, object.verticesBuffer);\n      gl.vertexAttribPointer(vertexPositonAttribute, 3, gl.FLOAT, false, 0, 0);\n      if (item.useWireframe || !object.indexBuffer) {\n        gl.drawArrays(item.mode, 0, object.vertices.length / 3);\n      } else {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer);\n        gl.drawElements(item.mode, object.indices.length, gl.UNSIGNED_SHORT, 0);\n      }\n    };\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      const drawObjectOrGroup = function (item) {\n        let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Matrix();\n        if (item instanceof Group) {\n          item.traverse(drawObjectOrGroup); // Recursively draw children\n        } else {\n          drawMyObject(item);\n        }\n      };\n      objectsToDraw.forEach(drawObjectOrGroup);\n      groups.forEach(drawObjectOrGroup);\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    };\n    let previousTimestamp;\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp;\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp;\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Update objects' positions, animations, etc., here based on elapsed time\n\n      drawScene();\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`;\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp;\n      //window.requestAnimationFrame(nextFrame)\n    };\n\n    drawScene();\n    groups.forEach(group => {\n      console.log(group);\n    });\n    window.requestAnimationFrame(nextFrame);\n  }, \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", false, function () {\n    return [gl.useProgram];\n  }), [useWireframe, showCube, showXYGrid, showSphere, groups]), \"ZdQBZ3rq7bWAAMQq6hlVCmYF0jM=\", true);\n\n  // Function to toggle cube visibility\n  const toggleCube = () => setShowCube(!showCube);\n\n  // Function to toggle XY grid visibility\n  const toggleXYGrid = () => setShowXYGrid(!showXYGrid);\n  const toggleSphere = () => setShowSphere(!showSphere);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of demonstrating them. It doesn\\u2019t have to fit any particular pitch or application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setUseWireframe(!useWireframe),\n      children: useWireframe ? 'Show Filled' : 'Show Wireframe'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCube,\n      children: showCube ? 'Remove Cube' : 'Add Cube'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleXYGrid,\n      children: showXYGrid ? 'Remove XY Grid' : 'Add XY Grid'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSphere,\n      children: showSphere ? 'Remove Sphere' : 'Add Sphere'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGroups([...groups, new Group()]),\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (lastObject && groups.length > 0) {\n          const updatedGroups = [...groups];\n          updatedGroups[updatedGroups.length - 1].add(lastObject);\n          setGroups(updatedGroups);\n        }\n      },\n      children: \"Add Object to Last Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (groups.length > 0) {\n          const updatedGroups = [...groups];\n          const lastGroup = updatedGroups[updatedGroups.length - 1];\n          if (lastGroup.children.length > 0) {\n            lastGroup.children.pop();\n            setGroups(updatedGroups);\n          }\n        }\n      },\n      children: \"Remove Object From Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Group \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), group.children.map((child, childIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: child.constructor.name\n        }, childIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: timestampRef,\n        style: {\n          position: 'absolute',\n          top: '7px',\n          left: '10px',\n          color: 'black'\n        },\n        children: \"Timestamp: 0.00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s2(Sandbox, \"qlvHxyvAYSf01u39l5QA/T/Mkrg=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["useEffect","useRef","useState","getGL","initVertexBuffer","initIndexBuffer","initSimpleShaderProgram","XYGrid","Cube","Sphere","Group","Matrix","VERTEX_SHADER","FRAGMENT_SHADER","CANVAS_WIDTH","CANVAS_HEIGHT","FRAMES_PER_SECOND","MILLISECONDS_PER_FRAME","Sandbox","props","useWireframe","setUseWireframe","showCube","setShowCube","showXYGrid","setShowXYGrid","showSphere","setShowSphere","groups","setGroups","lastObject","setLastObject","canvasRef","timestampRef","console","log","canvas","current","gl","alert","enable","DEPTH_TEST","depthFunc","LESS","clearColor","viewport","width","height","abort","simpleShaderProgram","shader","getShaderInfoLog","useProgram","objectsToDraw","xy","push","object","mode","LINES","cubeObject","TRIANGLES","sphereObject","vertexPositonAttribute","getAttribLocation","enableVertexAttribArray","colorUniform","getUniformLocation","forEach","entry","vertices","toRawLineArray","toRawTriangleArray","verticesBuffer","color","colors","i","maxi","length","concat","r","g","b","colorsBuffer","indices","indexBuffer","drawMyObject","item","uniform3f","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","drawArrays","ELEMENT_ARRAY_BUFFER","drawElements","UNSIGNED_SHORT","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawObjectOrGroup","matrix","traverse","previousTimestamp","nextFrame","timestamp","window","requestAnimationFrame","progress","innerText","toFixed","group","toggleCube","toggleXYGrid","toggleSphere","updatedGroups","add","lastGroup","children","pop","map","index","child","childIndex","constructor","name","position","top","left"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js"],"sourcesContent":["/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef, useState } from 'react'\nimport { getGL, initVertexBuffer, initIndexBuffer, initSimpleShaderProgram } from './glsl-utils'\nimport XYGrid from './Geometries/XY-Grid'\nimport Cube from './Geometries/Cube'\nimport Sphere from './Geometries/Sphere'\nimport { Group } from './Group'\nimport Matrix from './Matrix/Matrix'\n\nconst VERTEX_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  attribute vec3 vertexPosition;\n  // uniform mat4 uMatrix;\n\n  void main(void) {\n    gl_Position =  vec4(vertexPosition, 1.0);\n  }\n`\n\nconst FRAGMENT_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n\n  uniform vec3 color;\n\n  void main(void) {\n    gl_FragColor = vec4(color, 1.0);\n  }\n`\n\nconst CANVAS_WIDTH = 512\nconst CANVAS_HEIGHT = 512\n\nconst FRAMES_PER_SECOND = 60\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND\n\nconst Sandbox = props => {\n  const [useWireframe, setUseWireframe] = useState(false)\n  const [showCube, setShowCube] = useState(false)\n  const [showXYGrid, setShowXYGrid] = useState(true)\n  const [showSphere, setShowSphere] = useState(false)\n\n  const [groups, setGroups] = useState([])\n  const [lastObject, setLastObject] = useState(null)\n\n  const canvasRef = useRef()\n  const timestampRef = useRef()\n\n  useEffect(() => {\n    console.log('Effect hook running')\n    const canvas = canvasRef.current\n    if (!canvas) {\n      return\n    }\n\n    const gl = getGL(canvas)\n\n    if (!gl) {\n      alert('Sorry, Your browser does not support WebGL')\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.depthFunc(gl.LESS)\n    gl.clearColor(0.0, 0.0, 0.0, 0.0)\n    gl.viewport(0, 0, canvas.width, canvas.height)\n\n    // Shader initialization\n    let abort = false\n    const simpleShaderProgram = initSimpleShaderProgram(\n      gl,\n      VERTEX_SHADER,\n      FRAGMENT_SHADER,\n\n      shader => {\n        abort = true\n        alert('Shader loading error' + gl.getShaderInfoLog(shader))\n      },\n\n      simpleShaderProgram => {\n        abort = true\n        alert('Could not correctly link the shader program')\n      }\n    )\n\n    if (abort) {\n      alert('Fatal errors encountered; we cannot continue.')\n      return\n    }\n\n    gl.useProgram(simpleShaderProgram)\n\n    const objectsToDraw = []\n    // Conditionally add the XY grid\n\n    if (showXYGrid) {\n      const xy = new XYGrid()\n      objectsToDraw.push({\n        object: xy,\n        mode: gl.LINES,\n        useWireframe: true\n      })\n    }\n\n    // Conditionally add the cube (only do # in [1.0 -> 1.8])\n    if (showCube) {\n      const cubeObject = new Cube(1)\n      setLastObject(cubeObject)\n      objectsToDraw.push({\n        object: cubeObject,\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES,\n        useWireframe: true\n      })\n    }\n\n    if (showSphere) {\n      const sphereObject = new Sphere()\n      setLastObject(sphereObject)\n      objectsToDraw.push({\n        object: sphereObject,\n        mode: useWireframe ? gl.LINES : gl.TRIANGLES,\n        useWireframe: true\n      })\n    }\n\n    const vertexPositonAttribute = gl.getAttribLocation(simpleShaderProgram, 'vertexPosition')\n    gl.enableVertexAttribArray(vertexPositonAttribute)\n    const colorUniform = gl.getUniformLocation(simpleShaderProgram, 'color')\n    //const uMatrixLocation = gl.getUniformLocation(simpleShaderProgram, 'uMatrix')\n\n    // Load buffers with vertex data\n    objectsToDraw.forEach(entry => {\n      const object = entry.object\n      console.log(object)\n      let vertices = entry.useWireframe ? object.toRawLineArray() : object.toRawTriangleArray()\n      console.log(vertices)\n\n      object.verticesBuffer = initVertexBuffer(gl, vertices)\n      \n\n      if (!object.color) {\n        // If we have a single color, we expand that into an array\n        // of the same color over and over.\n        object.colors = []\n        for (let i = 0, maxi = vertices.length / 3; i < maxi; i += 1) {\n          object.colors = object.colors.concat(\n            object.color.r,\n            object.color.g,\n            object.color.b\n          )\n        }\n      }\n\n\n      object.colorsBuffer = initVertexBuffer(gl, object.colors)\n\n      // if indices exist ...\n      if (object.indices) {\n        object.indexBuffer = initIndexBuffer(gl, object.indices)\n      }\n    })\n\n    // drawing obj by vertices\n    const drawMyObject = item => {\n      const object = item.object\n      \n\n      gl.uniform3f(colorUniform, object.color.r, object.color.g, object.color.b)\n\n      // console.log(object)\n\n      // console.log(matrix) // Check the object\n      // console.log(matrix.toWebGL)\n      // const webGLMatrix = matrix.toWebGL()\n      // gl.uniformMatrix4fv(uMatrixLocation, false, webGLMatrix)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, object.verticesBuffer)\n      gl.vertexAttribPointer(vertexPositonAttribute, 3, gl.FLOAT, false, 0, 0)\n\n      if (item.useWireframe || !object.indexBuffer) {\n        gl.drawArrays(item.mode, 0, object.vertices.length / 3)\n      } else {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer)\n        gl.drawElements(item.mode, object.indices.length, gl.UNSIGNED_SHORT, 0)\n      }\n    }\n\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n      const drawObjectOrGroup = (item, matrix = new Matrix()) => {\n        if (item instanceof Group) {\n          item.traverse(drawObjectOrGroup) // Recursively draw children\n        } else {\n          drawMyObject(item)\n        }\n      }\n\n      objectsToDraw.forEach(drawObjectOrGroup)\n      groups.forEach(drawObjectOrGroup)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null)\n    }\n\n    let previousTimestamp\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Update objects' positions, animations, etc., here based on elapsed time\n\n      drawScene()\n\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp\n      //window.requestAnimationFrame(nextFrame)\n    }\n\n    drawScene()\n\n    groups.forEach(group => {\n      console.log(group)\n    })\n    window.requestAnimationFrame(nextFrame)\n  }, [useWireframe, showCube, showXYGrid, showSphere, groups])\n\n  // Function to toggle cube visibility\n  const toggleCube = () => setShowCube(!showCube)\n\n  // Function to toggle XY grid visibility\n  const toggleXYGrid = () => setShowXYGrid(!showXYGrid)\n\n  const toggleSphere = () => setShowSphere(!showSphere)\n\n  return (\n    <article>\n      <p>\n        The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of\n        demonstrating them. It doesn’t have to fit any particular pitch or application.\n      </p>\n      <button onClick={() => setUseWireframe(!useWireframe)}>{useWireframe ? 'Show Filled' : 'Show Wireframe'}</button>\n      <button onClick={toggleCube}>{showCube ? 'Remove Cube' : 'Add Cube'}</button> {/* Toggle cube */}\n      <button onClick={toggleXYGrid}>{showXYGrid ? 'Remove XY Grid' : 'Add XY Grid'}</button> {/* Toggle XY grid */}\n      <button onClick={toggleSphere}>{showSphere ? 'Remove Sphere' : 'Add Sphere'}</button>\n      <button onClick={() => setGroups([...groups, new Group()])}>Create New Group</button>\n      <button\n        onClick={() => {\n          if (lastObject && groups.length > 0) {\n            const updatedGroups = [...groups]\n            updatedGroups[updatedGroups.length - 1].add(lastObject)\n            setGroups(updatedGroups)\n          }\n        }}\n      >\n        Add Object to Last Group\n      </button>\n      <button\n        onClick={() => {\n          if (groups.length > 0) {\n            const updatedGroups = [...groups]\n            const lastGroup = updatedGroups[updatedGroups.length - 1]\n\n            if (lastGroup.children.length > 0) {\n              lastGroup.children.pop()\n              setGroups(updatedGroups)\n            }\n          }\n        }}\n      >\n        Remove Object From Group\n      </button>\n      <div>\n        <h2>Groups</h2>\n        {groups.map((group, index) => (\n          <div key={index}>\n            <h3>Group {index + 1}</h3>\n            {group.children.map((child, childIndex) => (\n              <p key={childIndex}>{child.constructor.name}</p>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div style={{ position: 'relative' }}>\n        <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={canvasRef} />\n        <div ref={timestampRef} style={{ position: 'absolute', top: '7px', left: '10px', color: 'black' }}>\n          Timestamp: 0.00\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Sandbox\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}