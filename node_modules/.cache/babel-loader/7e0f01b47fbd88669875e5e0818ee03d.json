{"ast":null,"code":"var _jsxFileName = \"/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js\",\n  _s = $RefreshSig$();\n/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef } from 'react';\nimport { getGL, initVertexBuffer, compileShader, linkShaderProgram, initSimpleShaderProgram } from '.';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 512;\nconst CANVAS_HEIGHT = 512;\nconst FRAMES_PER_SECOND = 30;\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND;\nconst Sandbox = props => {\n  _s();\n  const canvasRef = useRef();\n  const timestampRef = useRef();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n    const gl = getGL(canvas);\n    if (!gl) {\n      console.log('WebGL 2.0 not supported. Falling back on WebGL 1.0.');\n      gl = canvas.getContext('webgl');\n    }\n    if (!gl) {\n      alert('Your browser does not support WebGL');\n    }\n    gl.enable(gl.DEPTH_TEST);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    // Shader initialization\n    // TODO: Initialize your shaders here (vertex shader and fragment shader)\n    // This involves compiling shaders and linking them to a shader program\n\n    // Object and scene initialization\n    // TODO: Define your 3D objects here\n    // This might involve creating vertex buffers, index buffers, and setting up vertex attributes\n\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      // TODO: Render your objects here. This could involve binding buffers, setting shader uniforms, and making draw calls.\n\n      // Example: gl.drawArrays or gl.drawElements calls for rendering.\n\n      // Display obj (forEach)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n      // All done.\n      // might not be needed\n      // gl.flush()\n    };\n\n    let previousTimestamp;\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp;\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp;\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame);\n        return;\n      }\n\n      // Update objects' positions, animations, etc., here based on elapsed time\n\n      drawScene();\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`;\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp;\n      window.requestAnimationFrame(nextFrame);\n    };\n    drawScene();\n    window.requestAnimationFrame(nextFrame);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of demonstrating them. It doesn\\u2019t have to fit any particular pitch or application.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: timestampRef,\n        style: {\n          position: 'absolute',\n          top: '7px',\n          left: '10px',\n          color: 'black'\n        },\n        children: \"Timestamp: 0.00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"R0tpnDtzRr4QLNeC7f9WYTtRP00=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["useEffect","useRef","getGL","initVertexBuffer","compileShader","linkShaderProgram","initSimpleShaderProgram","CANVAS_WIDTH","CANVAS_HEIGHT","FRAMES_PER_SECOND","MILLISECONDS_PER_FRAME","Sandbox","props","canvasRef","timestampRef","canvas","current","gl","console","log","getContext","alert","enable","DEPTH_TEST","clearColor","viewport","width","height","drawScene","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bindBuffer","ARRAY_BUFFER","previousTimestamp","nextFrame","timestamp","window","requestAnimationFrame","progress","innerText","toFixed","position","top","left","color"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Sandbox.js"],"sourcesContent":["/**\n * Build out this component to display a “sandbox” scene—see the description below.\n */\nimport { useEffect, useRef } from 'react'\nimport { getGL, initVertexBuffer, compileShader, linkShaderProgram, initSimpleShaderProgram } from '.'\n\n\nconst CANVAS_WIDTH = 512\nconst CANVAS_HEIGHT = 512\n\nconst FRAMES_PER_SECOND = 30\nconst MILLISECONDS_PER_FRAME = 1000 / FRAMES_PER_SECOND\n\nconst Sandbox = props => {\n  const canvasRef = useRef()\n  const timestampRef = useRef()\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    if (!canvas) {\n      return\n    }\n\n    const gl = getGL(canvas)\n\n    if (!gl) {\n      console.log('WebGL 2.0 not supported. Falling back on WebGL 1.0.')\n      gl = canvas.getContext('webgl')\n    }\n\n    if (!gl) {\n      alert('Your browser does not support WebGL')\n    }\n\n    gl.enable(gl.DEPTH_TEST)\n    gl.clearColor(0.0, 0.0, 0.0, 0.0)\n    gl.viewport(0, 0, canvas.width, canvas.height)\n\n    // Shader initialization\n    // TODO: Initialize your shaders here (vertex shader and fragment shader)\n    // This involves compiling shaders and linking them to a shader program\n\n    // Object and scene initialization\n    // TODO: Define your 3D objects here\n    // This might involve creating vertex buffers, index buffers, and setting up vertex attributes\n\n    const drawScene = () => {\n      // Clear the display.\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n      // TODO: Render your objects here. This could involve binding buffers, setting shader uniforms, and making draw calls.\n\n      // Example: gl.drawArrays or gl.drawElements calls for rendering.\n\n      // Display obj (forEach)\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n      // All done.\n      // might not be needed\n      // gl.flush()\n    }\n\n    let previousTimestamp\n    const nextFrame = timestamp => {\n      // Initialize the timestamp.\n      if (!previousTimestamp) {\n        previousTimestamp = timestamp\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Check if it’s time to advance.\n      const progress = timestamp - previousTimestamp\n      if (progress < MILLISECONDS_PER_FRAME) {\n        // Do nothing if it’s too soon.\n        window.requestAnimationFrame(nextFrame)\n        return\n      }\n\n      // Update objects' positions, animations, etc., here based on elapsed time\n\n      drawScene()\n\n      if (timestampRef.current) {\n        timestampRef.current.innerText = `Timestamp: ${timestamp.toFixed(2)}`\n      }\n\n      // Request the next frame.\n      previousTimestamp = timestamp\n      window.requestAnimationFrame(nextFrame)\n    }\n\n    drawScene()\n\n    window.requestAnimationFrame(nextFrame)\n  }, [])\n\n  return (\n    <article>\n      <p>\n        The sandbox scene is where you can demonstrate features/capabilities of your library solely for the purpose of\n        demonstrating them. It doesn’t have to fit any particular pitch or application.\n      </p>\n\n      <div style={{ position: 'relative' }}>\n        <canvas width={CANVAS_WIDTH} height={CANVAS_HEIGHT} ref={canvasRef} />\n        <div ref={timestampRef} style={{ position: 'absolute', top: '7px', left: '10px', color: 'black' }}>\n          Timestamp: 0.00\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Sandbox\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}