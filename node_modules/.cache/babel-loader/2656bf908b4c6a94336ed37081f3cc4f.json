{"ast":null,"code":"import { Transformable } from '../Group';\nexport class Cube extends Transformable {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    super();\n    this.size = size; // user can manipulate size of cube on init\n    this.vertices = this.generateVertices(size);\n    this.facesByIndex = this.defineFacesByIndex();\n  }\n  generateVertices(size) {\n    return [[-0.5, -0.5, -0.5],\n    // 0\n    [0.5, -0.5, -0.5],\n    // 1\n    [0.5, 0.5, -0.5],\n    // 2\n    [-0.5, 0.5, -0.5],\n    // 3\n    [-0.5, -0.5, 0.5],\n    // 4\n    [0.5, -0.5, 0.5],\n    // 5\n    [0.5, 0.5, 0.5],\n    // 6\n    [-0.5, 0.5, 0.5] // 7\n    ].map(vertex => vertex.map(coordinate => coordinate * size));\n  }\n  defineFacesByIndex() {\n    return [[0, 3, 2], [0, 2, 1],\n    // back\n    [1, 2, 6], [1, 6, 5],\n    // right\n    [4, 6, 7], [4, 5, 6],\n    // front\n    [0, 7, 3], [0, 4, 7],\n    // left\n    [4, 1, 5], [4, 0, 1],\n    // bottom\n    [3, 7, 6], [3, 6, 2] // top\n    ];\n  }\n\n  toRawTriangleArray() {\n    const result = [];\n    this.facesByIndex.forEach(face => {\n      face.forEach(vertexIndex => {\n        result.push(...this.vertices[vertexIndex]);\n      });\n    });\n    return result;\n  }\n  toRawLineArray() {\n    const result = [];\n    this.facesByIndex.forEach(face => {\n      for (let i = 0, maxI = face.length; i < maxI; i++) {\n        result.push(...this.vertices[face[i]], ...this.vertices[face[(i + 1) % maxI]]);\n      }\n    });\n    return result;\n  }\n}","map":{"version":3,"names":["Transformable","Cube","constructor","size","vertices","generateVertices","facesByIndex","defineFacesByIndex","map","vertex","coordinate","toRawTriangleArray","result","forEach","face","vertexIndex","push","toRawLineArray","i","maxI","length"],"sources":["/home/munoz/Desktop/Spring2024/cmsi3710/final/our-own-3d-library-daniel_munoz/src/Geometries/Cube.js"],"sourcesContent":["import { Transformable } from '../Group'\nexport class Cube extends Transformable {\n  constructor(size = 1) {\n    super()\n    this.size = size // user can manipulate size of cube on init\n    this.vertices = this.generateVertices(size)\n    this.facesByIndex = this.defineFacesByIndex()\n  }\n\n  generateVertices(size) {\n    return [\n      [-0.5, -0.5, -0.5], // 0\n      [0.5, -0.5, -0.5], // 1\n      [0.5, 0.5, -0.5], // 2\n      [-0.5, 0.5, -0.5], // 3\n      [-0.5, -0.5, 0.5], // 4\n      [0.5, -0.5, 0.5], // 5\n      [0.5, 0.5, 0.5], // 6\n      [-0.5, 0.5, 0.5] // 7\n    ].map(vertex => vertex.map(coordinate => coordinate * size))\n  }\n\n  defineFacesByIndex() {\n    return [\n      [0, 3, 2],\n      [0, 2, 1], // back\n      [1, 2, 6],\n      [1, 6, 5], // right\n      [4, 6, 7],\n      [4, 5, 6], // front\n      [0, 7, 3],\n      [0, 4, 7], // left\n      [4, 1, 5],\n      [4, 0, 1], // bottom\n      [3, 7, 6],\n      [3, 6, 2] // top\n    ]\n  }\n\n  toRawTriangleArray() {\n    const result = []\n    this.facesByIndex.forEach(face => {\n      face.forEach(vertexIndex => {\n        result.push(...this.vertices[vertexIndex])\n      })\n    })\n    return result\n  }\n\n  toRawLineArray() {\n    const result = []\n    this.facesByIndex.forEach(face => {\n      for (let i = 0, maxI = face.length; i < maxI; i++) {\n        result.push(...this.vertices[face[i]], ...this.vertices[face[(i + 1) % maxI]])\n      }\n    })\n    return result\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}